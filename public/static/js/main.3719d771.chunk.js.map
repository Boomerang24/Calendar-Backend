{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/EventModal.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routes/PrivateRoute.js","routes/PublicRoute.js","routes/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","e","end","moment","toDate","start","eventAddNew","eventClearActive","eventUpdated","eventDeleted","eventsLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","now","minutes","seconds","add","endDate","clone","initEvent","notes","EventModal","closeModal","dateStart","setDateStart","dateEnd","setDateEnd","validTitle","setValidTitle","formValues","setFormValues","useEffect","momentStart","momentEnd","isSameOrAfter","trim","length","getState","console","log","evento","_id","eventStartAddNew","format","minDate","autoComplete","rows","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","CalendarModal","overlayClassName","isOpen","closeTimeoutMS","onRequestClose","style","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","children","to","PublicRoute","AppRouter","path","element","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3719d771.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Clear events upon Logout',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAdded: '[event] Event Added',\r\n    eventClearActive: '[event] Clear Active Event',\r\n    eventUpdated: '[event] Event Updated',\r\n    eventDeleted: '[event] Event Deleted',\r\n    eventsLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinish: '[auth] Finished checking state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Start login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenewal: '[auth] Start Token Renewal',\r\n    authLogout: '[auth] Logout',\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n};\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: <ID>,\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     notes: 'Comprar pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Alex'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAdded:\r\n            return {\r\n                ...state,\r\n                events: [ ...state.events, action.payload ]\r\n            }\r\n\r\n        case types.eventClearActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        \r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    event => ( event.id === action.payload.id ) \r\n                        ? action.payload\r\n                        : event\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    event => ( event.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        \r\n        case types.eventsLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.eventLogout:\r\n            return initialState;\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\n\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n// endpoint es auth o event\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`; // localhost:4000/api/<auth o event></auth>\r\n\r\n    if ( method === 'GET' ){\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`; // localhost:4000/api/<auth o event></auth>\r\n    const token = localStorage.getItem( 'token' ) || '';\r\n\r\n    if ( method === 'GET' ){\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}\r\n","import moment from \"moment\";\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map( \r\n        ( e ) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    )\r\n}\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { types } from '../types/types';\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken( 'events', event, 'POST');\r\n            const body = await resp.json();\r\n    \r\n            if( body.ok ){\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log( error );\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAdded,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActive = () => ({ type: types.eventClearActive });\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken( `events/${ event.id }`, event, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ){\r\n                dispatch( eventUpdated( event ));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log( error );\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { id, title } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken( `events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n                Swal.fire('Completado', `El evento \"${title}\" ha sido eliminado`, 'success');\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log( error );\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const eventStartLoading = () => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'events' );\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents( body.eventos );\r\n\r\n            dispatch( eventsLoaded( events ));\r\n\r\n        } catch (error) {\r\n            console.log( error );\r\n        }\r\n    }\r\n}\r\n\r\nconst eventsLoaded = ( events ) => ({\r\n    type: types.eventsLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout });\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    // Al ser tarea async, se utiliza el return con async\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() ); // Grabar la fecha exacta para saber cuanto tiempo falta para que el token expire\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else { // body.ok = false\r\n            Swal.fire('Error', body.msg, 'error' );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() ); // Grabar la fecha exacta para saber cuanto tiempo falta para que el token expire\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else { // body.ok = false\r\n            Swal.fire('Error', body.msg, 'error' );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n\r\n        \r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() ); // Grabar la fecha exacta para saber cuanto tiempo falta para que el token expire\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch )=> {\r\n\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({target}) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset];\r\n\r\n}\r\n","import React from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: '',\r\n        lPassword: ''\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: '',\r\n        rEmail: '',\r\n        rPassword1: '',\r\n        rPassword2: ''\r\n    });\r\n    \r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n    \r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin( lEmail, lPassword ));\r\n    }\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if( rPassword1 !== rPassword2 ){\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n        } else {\r\n            dispatch( startRegister( rEmail, rPassword1, rName ));\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='lEmail'\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='lPassword'\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name='rName'\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='rEmail'\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='rPassword1'\r\n                                value={ rPassword1 } \r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name='rPassword2'\r\n                                value={ rPassword2 } \r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\" />\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    \r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>- { title } </strong>\r\n            <span> { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });\r\n","import React, { useEffect, useState } from 'react';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst endDate = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: endDate.toDate()\r\n}\r\n\r\nexport const EventModal = ({ closeModal }) => {\r\n\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate() );\r\n    const [dateEnd, setDateEnd] = useState( endDate.toDate() );\r\n    const [validTitle, setValidTitle] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { title, notes, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        \r\n        if( activeEvent ){\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n    \r\n    const handleEndtDateChange = ( e ) => {\r\n        setDateEnd( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if( momentStart.isSameOrAfter( momentEnd )){\r\n            return Swal.fire('Error', 'La segunda fecha debe de ser mayor', 'error');\r\n        }\r\n\r\n        if ( title.trim().length < 2 ){\r\n            setValidTitle( false );\r\n        }\r\n\r\n        // Realizar grabacion en DB\r\n\r\n        if( activeEvent ){\r\n\r\n            dispatch( eventStartUpdate( formValues ));\r\n\r\n        } else {\r\n            \r\n            dispatch( eventStartAddNew(formValues) );\r\n        };\r\n\r\n\r\n        closeModal();\r\n        setFormValues( initEvent );\r\n        setValidTitle( true );\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1> { ( activeEvent ) ? \"Editando evento\" : \"Nuevo evento\"} </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className='form-group'>\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                        format=\"h:mm a dd-MM-y\"\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndtDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                        format=\"h:mm a dd-MM-y\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !validTitle && 'is-invalid' } `}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport Modal from 'react-modal';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventClearActive } from '../../actions/events';\r\nimport { uiCloseModal } from '../../actions/ui';\r\n\r\nimport { EventModal } from './EventModal';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\nModal.setAppElement('#root'); // setAppElement es el elemento con el que se ligara el modal\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActive() );\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n        isOpen={ modalOpen }\r\n        closeTimeoutMS={ 200 }\r\n        onRequestClose={ closeModal }\r\n        style={ customStyles }\r\n        >\r\n            <EventModal closeModal={ closeModal }/>\r\n            \r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es-mx'; // Se importa el idioma de local\r\nimport { eventClearActive, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es'); // Se escoje el idioma de moment\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [ dispatch ]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    };\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive( e ) );\r\n    };\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectedSlot = ( e ) => {\r\n        dispatch( eventClearActive() );\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {        \r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectedSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                ( activeEvent ) && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({ children }) => {\r\n\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    return (\r\n        !!uid\r\n        ?   children\r\n        : <Navigate to=\"/login\" />\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const PublicRoute = ({ children }) => {\r\n\r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        !!uid\r\n        ? <Navigate to=\"/\" />\r\n        :   children\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking } = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( startChecking() )\r\n\r\n    }, [dispatch]);\r\n\r\n    if ( checking ) {\r\n        return (<h5> Loading... </h5>);\r\n    }\r\n\r\n    return (\r\n        <Routes>\r\n            <Route \r\n                path=\"/login\"\r\n                element={\r\n                    <PublicRoute>\r\n                        <LoginScreen />\r\n                    </PublicRoute>\r\n                }\r\n            />\r\n            <Route \r\n                path=\"/*\" \r\n                element={\r\n                    <PrivateRoute>\r\n                        <CalendarScreen />\r\n                    </PrivateRoute>\r\n                }\r\n            />\r\n        </Routes>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routes/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <CalendarApp />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}